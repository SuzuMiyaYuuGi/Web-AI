import streamlit as st
from qa_engine import answer_question

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(page_title="üîç TISTR AI Search", layout="centered")
st.title("üîç ‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå TISTR")
st.caption("‚úÖ ‡πÉ‡∏ä‡πâ LLaMA3 ‡∏ú‡πà‡∏≤‡∏ô Ollama (‡∏£‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡∏à‡∏≤‡∏Å session_state ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
if "popular_questions" not in st.session_state:
    st.session_state.popular_questions = [
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoAG ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoFOOD ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoHerb ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoEn ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoRobot ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ InnoMat ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ BRC ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ RTTC ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
        "‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ MPAD ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£",
    ]

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡πÉ‡∏´‡∏°‡πà
with st.expander("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°"):
    new_q = st.text_input("üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    if st.button("‚ûï ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°"):
        if new_q.strip() != "" and new_q not in st.session_state.popular_questions:
            st.session_state.popular_questions.append(new_q)
            st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°
st.markdown("### ‚≠ê ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°")
cols = st.columns(2)
for i, q in enumerate(st.session_state.popular_questions):
    if cols[i % 2].button(f"üí¨ {q}"):
        st.session_state.selected_question = q

# ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
question = st.text_input("‚ùì ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ", value=st.session_state.get("selected_question", ""))

# ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
if st.button("üì§ ‡∏ñ‡∏≤‡∏°‡πÄ‡∏•‡∏¢") and question:
    with st.spinner("üß† ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•..."):
        answer = answer_question(question)
        st.markdown("### üìÑ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö")
        st.markdown(answer)
    st.session_state.selected_question = ""  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö
